/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package client;

import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JFrame;
import javax.swing.JList;
import javax.swing.JOptionPane;
import tags.Tags;

/**
 *
 * @author user
 */
public class ClientHomeForm extends javax.swing.JFrame implements Client.ClientCallback{

    /**
     * Creates new form HomeForm
     */
    public ClientHomeForm(String arg, int arg1, String name, String msg){
        initComponents();
        IPClient = arg;
        portClient = arg1;
        nameUser = name;
        dataUser = msg;
      
        try {
            clientNode = new Client(IPClient, portClient, nameUser, dataUser, this);
            setup();
        } catch (Exception ex) {
            Logger.getLogger(ClientHomeForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public ClientHomeForm(){
        initComponents();
        try {
            clientNode = new Client(IPClient, portClient, nameUser, dataUser, this);
            setup();
        } catch (Exception ex) {
            Logger.getLogger(ClientHomeForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelName = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        buttonConnect = new java.awt.Button();
        jScrollPane1 = new javax.swing.JScrollPane();
        listActive = new javax.swing.JList<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        labelName.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        labelName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelName.setText("No Name");
        labelName.setToolTipText("");

        jLabel2.setText("Online Users");

        buttonConnect.setLabel("Connect");
        buttonConnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonConnectActionPerformed(evt);
            }
        });

        listActive.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        listActive.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listActiveMouseClicked(evt);
            }
        });
        listActive.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listActiveValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(listActive);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(buttonConnect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(0, 580, Short.MAX_VALUE)))))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(272, 272, 272)
                .addComponent(labelName, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(35, Short.MAX_VALUE)
                .addComponent(labelName)
                .addGap(33, 33, 33)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonConnect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(100, 100, 100))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonConnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonConnectActionPerformed
        // TODO add your handling code here:
        String name = listActive.getSelectedValue();
        if (name.equals("") || Client.clientarray == null) {
                JOptionPane.showMessageDialog(null, "Something went wrong, please try again!!");
                return;
        }
        if (name.equals(nameUser)) {
                JOptionPane.showMessageDialog(null, "Something went wrong, please try again!!");
                return;
        }
        int size = Client.clientarray.size();
        for (int i = 0; i < size; i++) {
            if (name.equals(Client.clientarray.get(i).getName())) {
                try {
                    clientNode.intialNewChat(Client.clientarray.get(i).getHost(),Client.clientarray.get(i).getPort(), name);
                    return;
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        }
        System.out.println(name);
    }//GEN-LAST:event_buttonConnectActionPerformed

    private void listActiveValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listActiveValueChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_listActiveValueChanged

    private void listActiveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listActiveMouseClicked
        // TODO add your handling code here:
//        String value = (String)listActive.getModel().getElementAt(listActive.locationToIndex(evt.getPoint()));
//        System.out.println(value);
    }//GEN-LAST:event_listActiveMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClientHomeForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClientHomeForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClientHomeForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClientHomeForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ClientHomeForm().setVisible(true);
            }
        });
    }

    private void setup() throws Exception {
        labelName.setText(nameUser);
        listActive.setModel(model);
        clientNode = new Client(IPClient, portClient, nameUser, dataUser, this);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Button buttonConnect;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelName;
    private javax.swing.JList<String> listActive;
    // End of variables declaration//GEN-END:variables
    private Client clientNode;
    private String IPClient = "", nameUser = "", dataUser = "";
    private int portClient = 0;
    static DefaultListModel<String> model = new DefaultListModel<>();
    
    @Override
    public void updateFriend(String msg) {
        model.addElement(msg);
    }

    @Override
    public void resetList() {
        model.clear();
    }

    @Override
    public int request(String msg, boolean type) {
        JFrame frameMessage = new JFrame();
        return Tags.show(frameMessage, msg, type);
    }
}
